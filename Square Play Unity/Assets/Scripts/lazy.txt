playerShapes.Add(Instantiate((shape3Class)AssetDatabase.LoadAssetAtPath("Assets/Prefabs/Shapes/shape3.prefab", typeof(shape3Class))) as shape3Class);
playerShapes.Add(Instantiate((CClass)AssetDatabase.LoadAssetAtPath("Assets/Prefabs/Shapes/C.prefab", typeof(CClass))) as CClass);
playerShapes.Add(Instantiate((GClass)AssetDatabase.LoadAssetAtPath("Assets/Prefabs/Shapes/G.prefab", typeof(GClass))) as GClass);
playerShapes.Add(Instantiate((EClass)AssetDatabase.LoadAssetAtPath("Assets/Prefabs/Shapes/E.prefab", typeof(EClass))) as EClass);
playerShapes.Add(Instantiate((chairClass)AssetDatabase.LoadAssetAtPath("Assets/Prefabs/Shapes/chair.prefab", typeof(chairClass))) as chairClass);
playerShapes.Add(Instantiate((FClass)AssetDatabase.LoadAssetAtPath("Assets/Prefabs/Shapes/F.prefab", typeof(FClass))) as FClass);
playerShapes.Add(Instantiate((GimelClass)AssetDatabase.LoadAssetAtPath("Assets/Prefabs/Shapes/Gimel.prefab", typeof(GimelClass))) as GimelClass);
playerShapes.Add(Instantiate((LambdaClass)AssetDatabase.LoadAssetAtPath("Assets/Prefabs/Shapes/Lambda.prefab", typeof(LambdaClass))) as LambdaClass);
playerShapes.Add(Instantiate((groundClass)AssetDatabase.LoadAssetAtPath("Assets/Prefabs/Shapes/ground.prefab", typeof(groundClass))) as groundClass);
playerShapes.Add(Instantiate((HClass)AssetDatabase.LoadAssetAtPath("Assets/Prefabs/Shapes/H.prefab", typeof(HClass))) as HClass);
playerShapes.Add(Instantiate((FiveClass)AssetDatabase.LoadAssetAtPath("Assets/Prefabs/Shapes/Five.prefab", typeof(FiveClass))) as FiveClass);
playerShapes.Add(Instantiate((SevenClass)AssetDatabase.LoadAssetAtPath("Assets/Prefabs/Shapes/Seven.prefab", typeof(SevenClass))) as SevenClass);
playerShapes.Add(Instantiate((AClass)AssetDatabase.LoadAssetAtPath("Assets/Prefabs/Shapes/A.prefab", typeof(AClass))) as AClass);
playerShapes.Add(Instantiate((notnotClass)AssetDatabase.LoadAssetAtPath("Assets/Prefabs/Shapes/notnot.prefab", typeof(notnotClass))) as notnotClass);
playerShapes.Add(Instantiate((PClass)AssetDatabase.LoadAssetAtPath("Assets/Prefabs/Shapes/P.prefab", typeof(PClass))) as PClass);
playerShapes.Add(Instantiate((SixClass)AssetDatabase.LoadAssetAtPath("Assets/Prefabs/Shapes/Six.prefab", typeof(SixClass))) as SixClass);
